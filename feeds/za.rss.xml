<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>philokey的笔记</title><link>http://www.philokey.com/</link><description></description><atom:link href="http://www.philokey.com/feeds/za.rss.xml" rel="self"></atom:link><lastBuildDate>Fri, 01 Aug 2014 21:20:00 +0800</lastBuildDate><item><title>博客搭建记录</title><link>http://www.philokey.com/pages/2014/08/01/bo-ke-da-jian-ji-lu.html</link><description>&lt;p&gt;厌倦了一次又一次去搜相同问题的答案，写个博客把一些东西记录下来吧。
出于黑客精神，决定自己搭建博客。&lt;/p&gt;
&lt;p&gt;Wordpress过于庞大，而且我不会PHP，所以选择了基于python的pelican。
由于github有免费的300M空间，所以博客托管再github上。github还有一个好处就是对markdown的支持不错。&lt;/p&gt;
&lt;p&gt;不用数据库，全部都以可见文本形式存储，携带迁移，好开心~&lt;/p&gt;
&lt;p&gt;2015.11.29 update&lt;/p&gt;
&lt;p&gt;谢天谢地有这篇搭建笔记，重新把博客搭起来并迁移到了Python3，真感人。&lt;/p&gt;
&lt;h2&gt;本地配置Pelican&lt;/h2&gt;
&lt;h3&gt;安装pelican和markdown&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install pelican
pip install markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;启动工程&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;目录树如下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;├── content             #存放.mdn文件
├── develop_server.sh   #方便开启测试服务器
├── fabfile.py          #配置文件
├── Makefile            #方便管理博客的Makefile
├── output              #生成的输出文件
├── pelicanconf.py      #主配置文件
└── publishconf.py      #主发布文件，可删除
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;尝试写博文&lt;/h3&gt;
&lt;p&gt;和普通的markdown文件稍有不同，在顶部要有&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tag1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tag2&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;
&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Philokey&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Short&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;feeds&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;前两项必填&lt;/p&gt;
&lt;h3&gt;本地运行&lt;/h3&gt;
&lt;p&gt;在博客根目录下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make html
make serve
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;到 http://127.0.0.1:8000/ 可以查看。&lt;/p&gt;
&lt;h3&gt;组织文件结构&lt;/h3&gt;
&lt;p&gt;默认所有都再output里,可以按照日期组织生成的html
在pelicanconf.py里配置:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ARTICLE_URL = &amp;#39;pages/{date:%Y}/{date:%m}/{date:%d}/{slug}.html&amp;#39;
ARTICLE_SAVE_AS = &amp;#39;pages/{date:%Y}/{date:%m}/{date:%d}/{slug}.html&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;修改主题&lt;/h3&gt;
&lt;p&gt;默认主题好丑，可以安装自己喜欢的主题&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/getpelican/pelican-themes.git
cd pelican-themes
sudo pelican-themes -i bootstrap2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;选择主题，在pelicanconf.py中添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;THEME = &amp;#39;bootstrap2&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;安装插件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git clone git://github.com/getpelican/pelican-plugins.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以sitemap为例，修改配置文件pelicanconf.py&lt;/p&gt;
&lt;p&gt;'''
PLUGIN_PATH = u"pelican-plugins"
PLUGINS = ["sitemap"]
SITEMAP = {
    "format": "xml",
    "priorities": {
        "articles": 0.7,
        "indexes": 0.5,
        "pages": 0.3,
    },
    "changefreqs": {
        "articles": "monthly",
        "indexes": "daily",
        "pages": "monthly",
    }
}
'''&lt;/p&gt;
&lt;h3&gt;安装第三方评论系统&lt;/h3&gt;
&lt;p&gt;在Disqus上申请一个站点，记牢Shortname。 在pelicanconf.py添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;DISQUS_SITENAME = &amp;#39;Shortname&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;添加Google Analytics&lt;/h3&gt;
&lt;p&gt;去Google Analytics申请账号，记下跟踪ID。 在pelicanconf.py添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;GOOGLE_ANALYTICS = 跟踪ID
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;听说Google Analytics极其强悍，我没用过，试试吧&lt;/p&gt;
&lt;p&gt;至此，本地的部分就差不多搭建完毕了&lt;/p&gt;
&lt;h2&gt;使用GitHub Pages&lt;/h2&gt;
&lt;p&gt;在github上创建一个repository,名字为 username.github.io 并再setting里并再setting里面生成GitHub面生成GitHub Pages，几分钟后，页面会自动生成.&lt;/p&gt;
&lt;p&gt;到output里把&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd output
git init
git remote add origin git@github.com:username/username.github.io.git
git pull origin master
git add .
git commit
git push origin master 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样在username.github.io里面就可以查看博客&lt;/p&gt;
&lt;h3&gt;一键上传&lt;/h3&gt;
&lt;p&gt;修改Makefile文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;publish&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;PELICAN&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;INPUTDIR&lt;span class="k"&gt;)&lt;/span&gt; -o &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt; -s &lt;span class="k"&gt;$(&lt;/span&gt;CONFFILE&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;PELICANOPTS&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;github&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
    &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; git add . &lt;span class="p"&gt;;&lt;/span&gt;  git commit -am &lt;span class="s1"&gt;&amp;#39;update&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make github
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就可以实现一键上传&lt;/p&gt;
&lt;h2&gt;申请独立域名&lt;/h2&gt;
&lt;h3&gt;Godaddy&lt;/h3&gt;
&lt;p&gt;在&lt;a href="http://godaddy.com/"&gt;godaddy&lt;/a&gt;购买域名，并在Manage My Domains里修改Nameservers为这两个地址：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;f1g1ns1.dnspod.net
f1g1ns2.dnspod.net
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用godaddy自己的DNS服务器会被墙的样子&lt;/p&gt;
&lt;h3&gt;Dnspod&lt;/h3&gt;
&lt;p&gt;在&lt;a href="https://www.dnspod.cn/"&gt;Dnspod&lt;/a&gt;注册账号, 并添加刚申请的域名.
添加到 207.97.227.245 的A记录
并把CNAME的记录值改为 username.github.io.&lt;/p&gt;
&lt;h3&gt;Github&lt;/h3&gt;
&lt;p&gt;在output目录下添加CNAME文件，里面填入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;www.申请的域名
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样，博客主题就完成了。其他小功能自己探索吧&lt;/p&gt;
&lt;h2&gt;补充&lt;/h2&gt;
&lt;h3&gt;红框问题&lt;/h3&gt;
&lt;p&gt;发布之后发现代码里面有奇怪的红框，审查元素得知是css 里面有一个.err的class，如果代码被判断有语法错误就会产生红框，而大部分红框都是误伤。由于每次make html时主题的css都会重新根据安装的主题重新生成一边，所以要先卸载主题&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pelican-themes -i bootstrap2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;把pygments.css里面的&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="na"&gt;.highlight&lt;/span&gt; &lt;span class="no"&gt;.err&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="no"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="no"&gt;px&lt;/span&gt; &lt;span class="no"&gt;solid&lt;/span&gt; &lt;span class="c"&gt;#FF0000 } /* Error */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;去掉&lt;/p&gt;
&lt;p&gt;再重新安装主题&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">philokey</dc:creator><pubDate>Fri, 01 Aug 2014 21:20:00 +0800</pubDate><guid>tag:www.philokey.com,2014-08-01:pages/2014/08/01/bo-ke-da-jian-ji-lu.html</guid><category>Pelican</category><category>Blog</category><category>Python</category></item><item><title>hello world</title><link>http://www.philokey.com/pages/2014/08/01/hello-world.html</link><description>&lt;h3&gt;Hello World&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;cstdio&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello World&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="测试图片" src="https://lh4.googleusercontent.com/-mPNwHFX9qac/UQOGgQHjkcI/AAAAAAAAABA/YU7VaS0I2fs/s149/1131410.png" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">philokey</dc:creator><pubDate>Fri, 01 Aug 2014 00:00:00 +0800</pubDate><guid>tag:www.philokey.com,2014-08-01:pages/2014/08/01/hello-world.html</guid></item></channel></rss>